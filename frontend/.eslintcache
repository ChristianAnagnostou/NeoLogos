[{"/Users/christian/Portfolio Projects/phantomnation/frontend/src/index.js":"1","/Users/christian/Portfolio Projects/phantomnation/frontend/src/reportWebVitals.js":"2","/Users/christian/Portfolio Projects/phantomnation/frontend/src/App.js":"3","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordList/Wordlist.js":"4","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordEntryForm/WordEntryForm.js":"5","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/Wordlist.js":"6","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordEntryForm/WordEntryForm.js":"7","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/userLogin/UserLogin.js":"8","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/createAccount/CreateAccount.js":"9","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordDetails/WordDetails.js":"10","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/wordVotes/WordVotes.js":"11","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/heading/Heading.js":"12","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/home-page/Home.js":"13","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/recentlyViewed/RecentlyViewed.js":"14"},{"size":478,"mtime":1609351281707,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609347765141,"results":"17","hashOfConfig":"16"},{"size":4123,"mtime":1609656140398,"results":"18","hashOfConfig":"16"},{"size":334,"mtime":1609368854929,"results":"19","hashOfConfig":"16"},{"size":872,"mtime":1609368408284,"results":"20","hashOfConfig":"16"},{"size":881,"mtime":1609691735674,"results":"21","hashOfConfig":"16"},{"size":2013,"mtime":1609653101794,"results":"22","hashOfConfig":"16"},{"size":1856,"mtime":1609546495872,"results":"23","hashOfConfig":"16"},{"size":2580,"mtime":1609546787113,"results":"24","hashOfConfig":"16"},{"size":481,"mtime":1609691746794,"results":"25","hashOfConfig":"16"},{"size":789,"mtime":1609611772295,"results":"26","hashOfConfig":"16"},{"size":1556,"mtime":1609631272095,"results":"27","hashOfConfig":"16"},{"size":782,"mtime":1609652148622,"results":"28","hashOfConfig":"16"},{"size":1094,"mtime":1609691723946,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"659o3z",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/christian/Portfolio Projects/phantomnation/frontend/src/index.js",[],["60","61"],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/reportWebVitals.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/App.js",["62"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// React Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// Styles\nimport \"./styles/app.css\";\n// Components\nimport UserLogin from \"./components/userLogin/UserLogin\";\nimport CreateAccount from \"./components/createAccount/CreateAccount\";\nimport WordDetails from \"./components/wordDetails/WordDetails\";\nimport Home from \"./components/home-page/Home\";\n\nfunction App() {\n  const [words, setWords] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [visitedWordIds, setVisitedWordIds] = useState([]);\n\n  // Create a new word\n  const postWordData = async (newWordData) => {\n    console.log(\"posting new data\");\n    const response = axios.post(\"http://localhost:4001/api/words\", {\n      newWordData,\n      type: \"post-new-word\",\n    });\n    try {\n      await response;\n      fetchWordData();\n      return true;\n    } catch (e) {\n      if (e.response.status === 400) {\n        return false;\n      } else {\n        console.log(e);\n      }\n    }\n  };\n\n  // Request to login with user email then validate password\n  const handleUserLogin = async (userCreds) => {\n    const response = axios.post(\"http://localhost:4001/api/users/login\", { userCreds });\n    try {\n      const res = await response;\n      if (res.status !== 200) {\n        throw new Error(\"Invalid User Credentials\");\n      } else {\n        setCurrentUser(res.data);\n        setLoggedIn(true);\n        return true;\n      }\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  };\n\n  // Create a new account\n  const handleCreateAccount = async (userCreds) => {\n    const response = axios.post(\"http://localhost:4001/api/users\", { newUser: userCreds });\n    try {\n      const res = await response;\n      setCurrentUser(res.data);\n      setLoggedIn(true);\n      return true;\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  };\n\n  // Add a word to a user's visitedWordIds array\n  const handleAddViewedWord = async (wordId) => {\n    if (!visitedWordIds.includes(wordId)) {\n      if (loggedIn) {\n        const response = axios.post(`http://localhost:4001/api/users/${currentUser.userId}`, {\n          wordId,\n        });\n        try {\n          const res = await response;\n          setVisitedWordIds(res.data);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        setVisitedWordIds([...visitedWordIds, wordId]);\n      }\n    }\n  };\n\n  // Get all words from words api\n  const fetchWordData = async () => {\n    console.log(\"fetching new data\");\n    const response = axios.get(\"http://localhost:4001/api/words\");\n    try {\n      const res = await response;\n      setWords(res.data);\n      return true;\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  };\n  // Get all the recently viewed words id's for the current user\n  const fetchVisitedWordIds = async () => {\n    const response = axios.get(`http://localhost:4001/api/users/${currentUser.userId}`);\n    try {\n      const res = await response;\n      setVisitedWordIds(res.data.recentlyViewedWords);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetchVisitedWordIds();\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    fetchWordData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home\n              currentUser={currentUser}\n              loggedIn={loggedIn}\n              postWordData={postWordData}\n              words={words}\n              handleAddViewedWord={handleAddViewedWord}\n              visitedWordIds={visitedWordIds}\n            />\n          </Route>\n          <Route path=\"/user-login\">\n            <UserLogin handleUserLogin={handleUserLogin} />\n          </Route>\n          <Route path=\"/create-account\">\n            <CreateAccount handleCreateAccount={handleCreateAccount} />\n          </Route>\n          <WordDetails words={words} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordList/Wordlist.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordEntryForm/WordEntryForm.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/Wordlist.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordEntryForm/WordEntryForm.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/userLogin/UserLogin.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/createAccount/CreateAccount.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordDetails/WordDetails.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/wordVotes/WordVotes.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/heading/Heading.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/home-page/Home.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/recentlyViewed/RecentlyViewed.js",["63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":118,"column":6,"nodeType":"70","endLine":118,"endColumn":16,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":22,"column":6,"nodeType":"70","endLine":22,"endColumn":22,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchVisitedWordIds'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'getWordInfoFromIds'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [fetchVisitedWordIds, loggedIn]",{"range":"82","text":"83"},"Update the dependencies array to be: [getWordInfoFromIds, visitedWordIds]",{"range":"84","text":"85"},[3296,3306],"[fetchVisitedWordIds, loggedIn]",[580,596],"[getWordInfoFromIds, visitedWordIds]"]