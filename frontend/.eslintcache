[{"/Users/christian/Portfolio Projects/phantomnation/frontend/src/index.js":"1","/Users/christian/Portfolio Projects/phantomnation/frontend/src/reportWebVitals.js":"2","/Users/christian/Portfolio Projects/phantomnation/frontend/src/App.js":"3","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordList/Wordlist.js":"4","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordEntryForm/WordEntryForm.js":"5","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/Wordlist.js":"6","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordEntryForm/WordEntryForm.js":"7","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/userLogin/UserLogin.js":"8","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/createAccount/CreateAccount.js":"9","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordDetails/WordDetails.js":"10","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/wordVotes/WordVotes.js":"11","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/heading/Heading.js":"12","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/home-page/Home.js":"13","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/recentlyViewed/RecentlyViewed.js":"14","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/topWords/TopWords.js":"15","/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/index.js":"16","/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/userReducer.js":"17","/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/wordReducer.js":"18"},{"size":862,"mtime":1609992815778,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609347765141,"results":"21","hashOfConfig":"20"},{"size":5401,"mtime":1609994762071,"results":"22","hashOfConfig":"20"},{"size":334,"mtime":1609368854929,"results":"23","hashOfConfig":"20"},{"size":872,"mtime":1609368408284,"results":"24","hashOfConfig":"20"},{"size":1332,"mtime":1609727564497,"results":"25","hashOfConfig":"20"},{"size":2031,"mtime":1609699240704,"results":"26","hashOfConfig":"20"},{"size":1856,"mtime":1609546495872,"results":"27","hashOfConfig":"20"},{"size":2580,"mtime":1609546787113,"results":"28","hashOfConfig":"20"},{"size":481,"mtime":1609691746794,"results":"29","hashOfConfig":"20"},{"size":4406,"mtime":1609732743701,"results":"30","hashOfConfig":"20"},{"size":1556,"mtime":1609631272095,"results":"31","hashOfConfig":"20"},{"size":1290,"mtime":1609805201345,"results":"32","hashOfConfig":"20"},{"size":1073,"mtime":1609805531595,"results":"33","hashOfConfig":"20"},{"size":1008,"mtime":1609812797953,"results":"34","hashOfConfig":"20"},{"size":245,"mtime":1609992254902,"results":"35","hashOfConfig":"20"},{"size":955,"mtime":1609992139775,"results":"36","hashOfConfig":"20"},{"size":673,"mtime":1609992332482,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"659o3z",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/christian/Portfolio Projects/phantomnation/frontend/src/index.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/reportWebVitals.js",[],["77","78"],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/App.js",["79"],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordList/Wordlist.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/WordEntryForm/WordEntryForm.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/Wordlist.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordEntryForm/WordEntryForm.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/userLogin/UserLogin.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/createAccount/CreateAccount.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordDetails/WordDetails.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/wordlist/wordVotes/WordVotes.js",["80","81","82","83"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ForwardOutlinedIcon from \"@material-ui/icons/ForwardOutlined\";\n\nfunction WordVotes({\n  word,\n  loggedIn,\n  upvotedWords,\n  setUpvotedWords,\n  downvotedWords,\n  setDownvotedWords,\n  updateUsersWordVotes,\n  fetchAllUserVotes,\n}) {\n  const [voteCount, setVoteCount] = useState(word.voteCount);\n  const [userUpvotedWord, setUserUpvotedWord] = useState(false);\n  const [userDownvotedWord, setUserDownvotedWord] = useState(false);\n\n  // Get voteCount for specific word\n  const getVoteCount = async () => {\n    const response = axios.get(`http://localhost:4001/api/words/${word.wordId}/votes`);\n    try {\n      const res = await response;\n      return res.data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // Update vote after clicking vote\n  const updateVote = async () => {\n    const response = axios.put(`http://localhost:4001/api/words/${word.wordId}/votes`, {\n      voteCount,\n    });\n    try {\n      const res = await response;\n      return res.status;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    // Get current votes this word when component mounts\n    const getVotesOnLoad = async () => {\n      const num = await getVoteCount();\n      setVoteCount(num);\n    };\n    getVotesOnLoad();\n  }, []);\n\n  // Call after vote count has been updated\n  useEffect(() => {\n    if (loggedIn) {\n      updateVote();\n    }\n  }, [voteCount]);\n\n  useEffect(() => {\n    // If user has already voted on this this word\n    if (upvotedWords.includes(word.wordId)) {\n      setUserUpvotedWord(true);\n    } else if (downvotedWords.includes(word.wordId)) {\n      setUserDownvotedWord(true);\n    }\n  }, [upvotedWords, downvotedWords]);\n\n  // helper function for handleVoteClick\n  const filterOutCurrentWord = (prevWordIds) => {\n    return prevWordIds.filter((wordId) => wordId !== word.wordId);\n  };\n\n  const handleVoteClick = (direction) => {\n    if (!loggedIn) {\n      console.log(\"no voting unless logged in\");\n    } else {\n      switch (direction) {\n        case \"up\":\n          if (userDownvotedWord) {\n            //if already downvoted, remove the downvote\n            setUserDownvotedWord(false);\n            setDownvotedWords(filterOutCurrentWord);\n            setVoteCount((prevCount) => (prevCount += 1));\n          } else if (userUpvotedWord) {\n            // if already upvoted, remove the upvote and break\n            setUserUpvotedWord(false);\n            setUpvotedWords(filterOutCurrentWord);\n            setVoteCount((prevCount) => (prevCount -= 1));\n            break;\n          }\n          setUserUpvotedWord(true); // add the upvote\n          setUpvotedWords([...upvotedWords, word.wordId]);\n          setVoteCount((prevCount) => (prevCount += 1));\n          break;\n        case \"down\":\n          if (userUpvotedWord) {\n            //if already upvoted, remove the upvote\n            setUserUpvotedWord(false);\n            setUpvotedWords(filterOutCurrentWord);\n            setVoteCount((prevCount) => (prevCount -= 1));\n          } else if (userDownvotedWord) {\n            //if already downvoted, remove the downvote and break\n            setUserDownvotedWord(false);\n            setDownvotedWords(filterOutCurrentWord);\n            setVoteCount((prevCount) => (prevCount += 1));\n            break;\n          }\n          setUserDownvotedWord(true); // add the downvote\n          setDownvotedWords([...downvotedWords, word.wordId]);\n          setVoteCount((prevCount) => (prevCount -= 1));\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const [alreadyRetrievedFromServer, setaAreadyRetrievedFromServer] = useState(false);\n  useEffect(() => {\n    if (loggedIn) {\n      if (alreadyRetrievedFromServer) {\n        updateUsersWordVotes();\n      } else {\n        fetchAllUserVotes();\n        setaAreadyRetrievedFromServer(true);\n      }\n    }\n  }, [userUpvotedWord, userDownvotedWord, alreadyRetrievedFromServer]);\n\n  return (\n    <div className=\"word-votes\">\n      <ForwardOutlinedIcon\n        className={userUpvotedWord ? \"upvote voted-up\" : \"upvote\"}\n        onClick={() => handleVoteClick(\"up\")}\n      />\n      <span className=\"vote-num\">{voteCount}</span>\n      <ForwardOutlinedIcon\n        className={userDownvotedWord ? \"downvote voted-down\" : \"downvote\"}\n        onClick={() => handleVoteClick(\"down\")}\n      />\n    </div>\n  );\n}\n\nexport default WordVotes;\n","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/heading/Heading.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/home-page/Home.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/recentlyViewed/RecentlyViewed.js",["84"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction RecentlyViewed({ visitedWordIds }) {\n  const [visitedWords, setVisitedWords] = useState([]);\n\n  const getWordInfoFromIds = async () => {\n    const response = axios.post(\"http://localhost:4001/api/words\", {\n      visitedWordIds,\n      type: \"get-recently-viewed\",\n    });\n    try {\n      const res = await response;\n      console.log(\"from recentlyViewed\", res);\n      setVisitedWords(res.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getWordInfoFromIds();\n  }, [visitedWordIds]);\n\n  return (\n    <div className=\"recently-viewed\">\n      <h3>RECENTLY VIEWED WORDS</h3>\n      <ul>\n        {visitedWords.map((word) => {\n          return (\n            <Link to={`/${word.word}`} key={word.word}>\n              <li>\n                <p>{word.word}</p>\n                <p>{word.def}</p>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default RecentlyViewed;\n","/Users/christian/Portfolio Projects/phantomnation/frontend/src/components/topWords/TopWords.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/index.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/userReducer.js",[],"/Users/christian/Portfolio Projects/phantomnation/frontend/src/reducers/wordReducer.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":154,"column":6,"nodeType":"91","endLine":154,"endColumn":16,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":50,"column":6,"nodeType":"91","endLine":50,"endColumn":8,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":57,"column":6,"nodeType":"91","endLine":57,"endColumn":17,"suggestions":"96"},{"ruleId":"89","severity":1,"message":"97","line":66,"column":6,"nodeType":"91","endLine":66,"endColumn":36,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":128,"column":6,"nodeType":"91","endLine":128,"endColumn":70,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":24,"column":6,"nodeType":"91","endLine":24,"endColumn":22,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllUserData'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'getVoteCount'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'loggedIn' and 'updateVote'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'word.wordId'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has missing dependencies: 'fetchAllUserVotes', 'loggedIn', and 'updateUsersWordVotes'. Either include them or remove the dependency array. If 'updateUsersWordVotes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["109"],"React Hook useEffect has a missing dependency: 'getWordInfoFromIds'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchAllUserData, loggedIn]",{"range":"123","text":"124"},"Update the dependencies array to be: [getVoteCount]",{"range":"125","text":"126"},"Update the dependencies array to be: [loggedIn, updateVote, voteCount]",{"range":"127","text":"128"},"Update the dependencies array to be: [upvotedWords, downvotedWords, word.wordId]",{"range":"129","text":"130"},"Update the dependencies array to be: [userUpvotedWord, userDownvotedWord, alreadyRetrievedFromServer, loggedIn, updateUsersWordVotes, fetchAllUserVotes]",{"range":"131","text":"132"},"Update the dependencies array to be: [getWordInfoFromIds, visitedWordIds]",{"range":"133","text":"134"},[4276,4286],"[fetchAllUserData, loggedIn]",[1317,1319],"[getVoteCount]",[1438,1449],"[loggedIn, updateVote, voteCount]",[1702,1732],"[upvotedWords, downvotedWords, word.wordId]",[3889,3953],"[userUpvotedWord, userDownvotedWord, alreadyRetrievedFromServer, loggedIn, updateUsersWordVotes, fetchAllUserVotes]",[628,644],"[getWordInfoFromIds, visitedWordIds]"]